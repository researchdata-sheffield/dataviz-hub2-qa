{"version":3,"sources":["webpack://datavizhub-tuos/./src/components/events/upcomingEvents.jsx","webpack://datavizhub-tuos/./src/components/events/pastEvents.jsx","webpack://datavizhub-tuos/./src/components/events/pastEventsBlog.jsx","webpack://datavizhub-tuos/./src/pages/events.jsx","webpack://datavizhub-tuos/./src/images/no_thumbnail.png"],"names":["allEventbriteEvents","size","edges","length","map","node","summary","shortenText","userLocalTime","calculateUserLocalTime","start","local","className","style","transition","href","url","key","id","target","rel","name","text","time","online_event","venue","address","address_1","city","postal_code","backgroundImage","logo","original","NoThumb","backgroundPosition","backgroundSize","bottom","right","pastEvent","onClick","window","open","title","pastEventBlog","description","frontmatter","Link","to","fields","slug","date","data","eventBrite","useState","moment","format","currentDate","setDate","userTimezone","timezone","useEffect","interval","setInterval","clearInterval","keywords","backgroundColor","background","borderTop"],"mappings":"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","file":"component---src-pages-events-jsx-832601cd6f4d3dfb2cf7.js","sourcesContent":["import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { FaMapMarkerAlt, FaClock } from \"react-icons/fa\"\nimport { shortenText, calculateUserLocalTime } from \"../../utils/shared\"\nimport NoThumb from \"../../images/no_thumbnail.png\"\n\nconst UpcomingEvents = ({allEventbriteEvents}) => {\n  let size = allEventbriteEvents.edges.length\n  \n  if(allEventbriteEvents && (size > 0)) {\n    return (\n      <> \n      {allEventbriteEvents.edges.map(({node}) => {\n        //moment(node.start.local, \"DD-MMMM-YYYY hh:mm\") >= moment() && \n        let summary = shortenText(node.summary, 20);\n        let userLocalTime = calculateUserLocalTime(node.start.local);\n\n        return (\n          <a className=\"flex flex-col-reverse md:flex-row flex-wrap w-full hover:shadow-xl overflow-y-hidden bg-white my-3 lg:my-1 text-gray-700 group border-2 border-gray-50\" \n            style={{transition: \".5s ease\"}} href={node.url} key={node.id} target=\"_blank\" rel=\"noopener noreferrer\"\n          >\n            <div className=\"w-full md:w-9/12 py-4 px-4\">\n              <p className=\"font-semibold text-lg text-black group-hover:text-brand-blue leading-5\">{node.name.text}</p>\n              <p className=\"text-gray-700 mt-1 leading-tight text-sm group-hover:text-black\">{summary}</p>\n              <p className=\"flex pt-4 text-sm\"><FaClock className=\"mr-1\" />{userLocalTime.time}</p>\n              \n              <div className=\"flex flex-wrap text-sm\">\n                  <p className=\"flex\">{node.online_event && (<FaMapMarkerAlt className=\"mr-1 mt-1\" />)} {node.online_event && (\"Online Event\") }</p>\n                  <p className=\"flex\">\n                    {node.venue && ( <FaMapMarkerAlt className=\"mr-1 mt-1\" /> )} \n                    {node.venue && node.venue.name && (node.venue.name + \", \")} \n                    {node.venue && node.venue.address.address_1 && (node.venue.address.address_1 + \", \")} \n                    {node.venue && node.venue.address.city && (node.venue.address.city + \", \")}\n                    {node.venue && node.venue.address.postal_code && (node.venue.address.postal_code)}\n                  </p>\n              </div>\n            </div>\n            <div \n              className=\"w-full md:w-3/12 overflow-hidden relative min-h-15 2xl:min-h-15\" \n              style={{backgroundImage: `url(${node?.logo?.original?.url || NoThumb})`, backgroundPosition: 'center', backgroundSize: 'cover', transition: '.5s ease'}}\n            >\n              <button \n                href={node.url} \n                target=\"_blank\" rel=\"noopener noreferrer\" \n                className=\"hidden group-hover:flex py-1 px-3 font-semibold text-md bg-black text-white hover:bg-blue-900 absolute\" style={{bottom: '0%', right: '0%', }}\n              >\n                Register\n              </button>\n            </div>\n          </a> \n        )\n        \n      })}\n      </>\n    )\n  } else {\n    return (\n      <span className=\"mt-10 text-gray-900\">No upcoming events at the moment, please come back later.</span>\n    )\n  }\n}\n\nexport default UpcomingEvents\n\nUpcomingEvents.propTypes = {\n  allEventbriteEvents: PropTypes.any,\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BlackWhiteButton } from \"../style/styleComponent\";\nimport { shortenText, calculateUserLocalTime } from \"../../utils/shared\";\n\nconst PastEvents = ({ pastEvent }) => {\n  return (\n    <div className=\"w-full md:w-4/5 lg:w-4/12 2xl:w-3/12 lg:rounded-r-sm md:mt-10 lg:mt-0 p-6 pb-8 text-gray-100 border-t-8 border-gray-800 min-h-50 bg-gray-900 shadow-xl\">\n      <h1 className=\"text-xl pt-2 pb-6 font-semibold\">Past Events</h1>\n\n      {pastEvent.edges.map(({ node }) => {\n        let summary = shortenText(node.summary, 15);\n        let userLocalTime = calculateUserLocalTime(node.start.local);\n\n        return (\n          <button\n            className=\"cursor-pointer flex flex-wrap p-4 w-full overflow-hidden group themeColourBorder text-left\"\n            key={node.id}\n            onClick={() =>\n              window.open(node.url, \"_blank\", \"noopener, noreferrer\")\n            }\n          >\n            <p className=\"font-semibold text-md text-black leading-4\">\n              {node.name.text}\n            </p>\n            <p className=\"text-gray-700 text-xs leading-4 mt-1\">{summary}</p>\n            <p className=\"mt-2 text-xs text-black\">{userLocalTime.time}</p>\n          </button>\n        );\n      })}\n      {pastEvent.edges.length > 0 && (\n        <div className=\"flex justify-center w-full\" title=\"More past events\">\n          <BlackWhiteButton\n            onClick={() =>\n              window.open(\n                \"https://www.eventbrite.co.uk/o/scholarly-communications-team-the-university-of-sheffield-library-7528476001\",\n                \"_blank\",\n                \"noopener, noreferrer\"\n              )\n            }\n            className=\"w-full mt-0 hover:bg-brand-blue hover:text-white\"\n          >\n            . . .\n          </BlackWhiteButton>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PastEvents;\n\nPastEvents.propTypes = {\n  pastEvent: PropTypes.any\n};\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { shortenText } from \"../../utils/shared\"\n\nconst PastEventsBlog = ({pastEventBlog}) => {\n  \n  return (\n    <div className=\"w-full md:w-11/12 2xl:w-10/12 px-6 lg:mb-24 pb-8 lg:py-6 border-t-8 border-gray-50 min-h-30 rounded-sm bg-white shadow-xl flex flex-wrap space-x-2\">\n      <h1 className=\"text-2xl pt-2 pb-6 font-semibold w-full\">Event articles</h1>\n      \n      {pastEventBlog.edges.map(({ node }) => {\n        let description = shortenText(node.frontmatter.description, 20)\n\n        return (\n          <div className=\"flex flex-wrap transition duration-500 overflow-hidden p-3 md:w-1/3 lg:w-1/4 rounded-sm bg-white group hover:border-1 hover:border-gray-600 border-1 border-white\" key={node.id}>\n            <Link to={node.fields.slug}>\n            <p className=\"font-bold text-black leading-5\">{node.frontmatter.title}</p>\n            <p className=\"text-gray-700 mt-1 text-sm leading-4\">{description}</p>\n            <p className=\"mt-2 text-sm text-black\">{node.frontmatter.date}</p>\n            </Link>\n          </div>\n        )\n\n      })} \n    </div>\n  )\n}\n\nexport default PastEventsBlog\n\nPastEventsBlog.propTypes = {\n  pastEventBlog: PropTypes.any,\n}\n\n","import React, {useState, useEffect} from \"react\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/shared/seo\"\nimport PropTypes from \"prop-types\"\nimport UpcomingEvents from \"../components/events/upcomingEvents\"\nimport PastEvents from \"../components/events/pastEvents\"\nimport PastEventsBlog from \"../components/events/pastEventsBlog\"\nimport moment from \"moment\"\nimport { calculateUserLocalTime } from \"../utils/shared\"\n\nconst events = ({data: {eventBrite, pastEvent, pastEventBlog}}) => {\n  const UPDATE_TIME_MS = 30000;\n  const [currentDate, setDate] = useState(moment().format('ddd DD MMMM YYYY, hh:mm A'));\n  let userTimezone = calculateUserLocalTime(currentDate).timezone;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(moment().format('ddd DD MMMM YYYY, hh:mm A'))\n    }, UPDATE_TIME_MS );\n  \n    return () => clearInterval(interval);\n  }, [])\n\n  return (\n    <>\n      <SEO \n        title=\"Events\" \n        keywords={[\"the university of sheffield\", \"data visualisation\", \"data visualisation hub\", \"research\", \"dataviz events\", \"dataviz.shef\"]} \n      />\n      <div className=\"flex flex-wrap flex-grow-0 items-center justify-center min-h-100\" style={{backgroundColor: 'rgb(255,121,180)', backgroundImage: 'linear-gradient(225deg, rgba(255,121,180,1) 20%, rgba(255,163,251,1) 50%, rgba(41,197,255,1) 82%)'}}>\n        <div className=\"flex flex-wrap w-full justify-center my-16 lg:my-24\">\n          <div className=\"relative w-full lg:w-7/12 p-6 text-black overflow-auto min-h-70 lg:rounded-l-sm shadow-xl\" style={{background: '#fbfbfb', borderTop: 'solid 8px rgb(230 230 230)'}}>\n            <h1 className=\"inline-block text-2xl font-semibold\">Upcoming Events</h1>\n            <div className=\"text-gray-800 mt-2 mb-8 text-sm\" >{currentDate} ({userTimezone})</div>\n            <UpcomingEvents allEventbriteEvents={eventBrite} />\n            <h3 className=\"absolute bottom-0 left-0 p-6 text-sm\">\n              All dates for upcoming and past events are displayed in your timezone <span className=\"font-semibold\">{userTimezone}</span>.\n            </h3>\n          </div>\n          <PastEvents pastEvent={pastEvent} />\n          \n        </div>\n        <PastEventsBlog pastEventBlog={pastEventBlog} /> \n      </div>\n    </>\n  )\n}\n\nexport default events\n\nevents.propTypes = {\n\t\tdata: PropTypes.any\n  }\n  \n  \n\nexport const query = graphql`\n  query {\n    eventBrite: \n    allEventbriteEvents(limit: 4, sort: {fields: start___local, order: ASC}, filter: {id: {ne: \"777\"}, isFuture: {eq: true}}) {\n      ...EventbriteEventsEdge\n    }\n\n    pastEvent: \n    allEventbriteEvents(limit: 5, sort: {fields: start___local, order: DESC}, filter: {id: {ne: \"777\"}, isFuture: {eq: false}}) {\n      ...EventbriteEventsEdge\n    }\n\n    pastEventBlog: \n    allMdx(limit: 5, filter: {frontmatter: {category: {in: \"Events\"}, published: {ne: false}}}, sort: {order: DESC, fields: frontmatter___date}) {\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          id\n          frontmatter {\n            date(formatString: \"dddd, DD MMMM YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  \n  }\n`;\n\n\n\n\n","export default __webpack_public_path__ + \"static/no_thumbnail-04913a7cd0fb521a367898c1583475be.png\";"],"sourceRoot":""}